{"version":3,"sources":["components/noise.png","terminal/index.js","components/Input.js","components/Entry.js","components/Terminal.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","commands","whoami","help","trim","education","notFound","Container","styled","div","_templateObject","InputElement","input","_templateObject2","props","error","Caret","_templateObject3","offset","Input","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","updateInput1","_ref","target","length","setState","keyDown","_ref2","key","onSubmit","window","focus","bind","assertThisInitialized","_this2","react_default","a","createElement","ref","i","onKeyDown","autoFocus","onChange","autoComplete","autoCorrect","autoCapitalize","spellCheck","Component","Entry_templateObject","PastCommand","span","Entry_templateObject2","Prompt","Entry_templateObject3","Output","_templateObject4","Entry","submit","command","output","terminal","concat","_this$props","Entry_Container","components_Input","TERMINAL_HEIGHT","GLITCH_HEIGHT","Wrapper","Terminal_templateObject","Terminal_templateObject2","noise","Glitch","Terminal_templateObject3","Terminal","glitchOffset","entries","updateGlitchOffset","scrollBottom","current","scrollTop","scrollHeight","entry","createRef","setInterval","onClick","Terminal_Container","map","index","components_Entry","App_templateObject","App","App_Container","components_Terminal","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0e05f764.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noise.4d1a464e.png\";","const commands = {\n  whoami() {\n    return `My name is Guillaume, I am a web developper and Product guy based in Paris, for now. Iâ€™m available for all kind of stuff. Find out more by using the terminal ðŸ™ƒ`\n  },\n  help() {\n    return `\nTo get to know me better, you can type a few of the following commands:\n\nhelp: access to this help message\nexperience: discover my previous professional experience\neducation: list where I went to school\n    `.trim()\n  },\n  education() {\n    return `\nAfter getting a BaccalaurÃ©at in Economics and Management, I attended University (Economics) in Marseille, France, before attending a school named 42 in Paris in computer science where I learned unix, javascript, C and A LOT MORE.\n    `.trim()\n  },\n  notFound() {\n    return ''\n  }\n}\nexport default function terminal(command) {\n  return (commands[command] || commands['notFound'])(command)\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  position: relative;\n  display: inline;\n`\n\nconst InputElement = styled.input`\n  outline: none;\n  font-size: 16px;\n  border: 0;\n  font-family: 'Fira Code';\n  font-weight: 500;\n  color: transparent;\n  background: none;\n  text-shadow: 0 0 0 ${props => (props.error ? '#BE3B5D' : '#50d299')};\n`\n\nconst Caret = styled.div`\n  position: absolute;\n  pointer-events: none;\n  top: 0;\n  opacity: 1;\n  left: ${props => props.offset * 9.7}px;\n  width: 9px;\n  height: 19px;\n  background: rgba(255, 255, 255, 0.31);\n  animation: blinker 1s linear infinite;\n\n  @keyframes blinker {\n    25% {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0;\n    }\n    75% {\n      opacity: 1;\n    }\n  }\n`\n\nclass Input extends Component {\n  state = {\n    value: '',\n    error: false\n  }\n\n  constructor(props) {\n    super(props)\n    window.focus = this.focus.bind(this)\n  }\n\n  updateInput1 = ({ target: { value } }) => {\n    if (value.length >= 21) {\n      return this.setState({\n        error: true,\n        value: this.state.value\n      })\n    }\n    return this.setState({ value: value, error: false })\n  }\n\n  keyDown = ({ key }) => {\n    const value = this.state.value\n    if (key === 'Enter' && value.trim() !== '') {\n      this.setState({ value: '', error: false }, () =>\n        this.props.onSubmit(value)\n      )\n    }\n  }\n\n  focus() {\n    this.input.focus()\n  }\n\n  render() {\n    return (\n      <Container>\n        <Caret offset={this.state.value.length} />\n        <InputElement\n          ref={i => (this.input = i)}\n          error={this.state.error}\n          onKeyDown={this.keyDown}\n          autoFocus\n          value={this.state.value}\n          onChange={this.updateInput1}\n          autoComplete=\"off\"\n          autoCorrect=\"off\"\n          autoCapitalize=\"off\"\n          spellCheck=\"false\"\n        />\n      </Container>\n    )\n  }\n}\n\nexport default Input\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nimport terminal from '../terminal'\n\nimport Input from './Input'\n\nconst Container = styled.div`\n  font-size: 16px;\n  font-family: 'Fira Code';\n  font-weight: 500;\n  margin-top: 32px;\n`\n\nconst PastCommand = styled.span`\n  color: ${props => (props.error ? '#BE3B5D' : '#50d299')};\n`\n\nconst Prompt = styled.span`\n  color: #ff93f2;\n  margin-right: 16px;\n`\n\nconst Output = styled.p`\n  color: white;\n  max-width: 600px;\n  font-weight: 300;\n  line-height: 23px;\n  white-space: pre-wrap;\n`\n\nclass Entry extends Component {\n  submit = command => {\n    const output = terminal(command)\n    const error = !output\n    this.props.onSubmit({\n      error: !output,\n      output: error ? `guillaume.co: Command not found: ${command}` : output,\n      command\n    })\n  }\n\n  shouldComponentUpdate({ command }) {\n    return command !== this.props.command\n  }\n\n  render() {\n    const { command, output, error } = this.props\n    return (\n      <Container>\n        <Prompt>â–¶</Prompt>\n        {command ? (\n          <PastCommand error={error}>{command}</PastCommand>\n        ) : (\n          <Input onSubmit={this.submit} />\n        )}\n        {output && <Output>{output}</Output>}\n      </Container>\n    )\n  }\n}\n\nexport default Entry\n","import React, { Component, createRef } from 'react'\nimport styled from 'styled-components'\n\nimport noise from './noise.png'\nimport Entry from './Entry'\n\nconst TERMINAL_HEIGHT = 600\nconst GLITCH_HEIGHT = 128\n\nconst Wrapper = styled.div`\n  position: relative;\n`\n\nconst Container = styled.div`\n  width: 990px;\n  height: ${TERMINAL_HEIGHT}px;\n  border-radius: 16px;\n  background-color: #2d313e;\n  background: url(${noise});\n  overflow: hidden;\n  box-shadow: 32px 32px 64px 0 rgba(45, 49, 62, 0.88);\n  padding: 64px;\n  padding-top: 32px;\n  overflow-y: scroll;\n\n  @media (max-width: 700px) {\n    width: 100vw;\n    height: 100vh;\n    padding: 32px;\n    padding-top: 0;\n  }\n`\n\nconst Glitch = styled.div`\n  position: absolute;\n  width: 100%;\n  height: ${GLITCH_HEIGHT}px;\n  background-color: white;\n  opacity: 0.01;\n  top: ${props => props.offset}px;\n  left: 0;\n  right: 0;\n`\n\nclass Terminal extends Component {\n  state = {\n    glitchOffset: -GLITCH_HEIGHT,\n    entries: [\n      {\n        command: 'whoami',\n        error: false,\n        output:\n          'My name is Guillaume, I am a web developper and Product guy based in Paris, for now. Iâ€™m available for all kind of stuff. Find out more by using the terminal ðŸ™ƒ'\n      }\n    ]\n  }\n  constructor(props) {\n    super(props)\n    this.terminal = createRef()\n  }\n  updateGlitchOffset = () => {\n    const { glitchOffset } = this.state\n    if (glitchOffset >= TERMINAL_HEIGHT) {\n      return this.setState({ glitchOffset: -GLITCH_HEIGHT })\n    }\n    return this.setState({ glitchOffset: glitchOffset + 1 })\n  }\n  scrollBottom = () => {\n    this.terminal.current.scrollTop = this.terminal.current.scrollHeight\n  }\n  componentDidMount() {\n    setInterval(() => {\n      this.updateGlitchOffset()\n    }, 5)\n  }\n  submit = entry => {\n    this.setState(\n      { entries: this.state.entries.concat([entry]) },\n      this.scrollBottom\n    )\n  }\n  render() {\n    return (\n      <Wrapper onClick={window.focus}>\n        <Glitch offset={this.state.glitchOffset} />\n        <Container ref={this.terminal}>\n          {this.state.entries.map(({ command, error, output }, index) => (\n            <Entry\n              key={index}\n              command={command}\n              error={error}\n              output={output}\n            />\n          ))}\n          <Entry onSubmit={this.submit} />\n        </Container>\n      </Wrapper>\n    )\n  }\n}\nexport default Terminal\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nimport './App.css'\n\nimport Terminal from './components/Terminal'\n\nconst Container = styled.div`\n  max-width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #EFEFEF;\n  border: 16px solid #2D313E;\n`\n\nclass App extends Component {\n  render() {\n    return (\n      <Container>\n        <Terminal />\n      </Container>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}